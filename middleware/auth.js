const jwt = require('jsonwebtoken');
require('dotenv').config();

// Function pour dÃ©coder le token
/* */
/**
 * @function auth We try to get the token from the request headers.
 * If we can't find it, we send a 401 response.
 * If we can find it, we try to verify it using the secret key.
 * If it's valid, we add the decoded token to the request object.
 * If it's not valid, we send a 401 response.
 *
 * @param {object} req - The request object
 * @param {object} req.token - The token generated by connecting
 * @param {object} req.headers - The request headers
 * @param {object} req.headers.authorization - The authorization header
 * @param {object} res - The response object
 * @param {object} next - The Next middleware function
 *
 * @returns {void}
 */
module.exports = (req, res, next) => {
  try {
    const token = req.headers.authorization.split(' ')[1];
    const decodedToken = jwt.verify(token, process.env.SECRET_KEY_JWT);
    req.token = decodedToken;
    next();
  } catch (error) {
    res.status(401).json({ error: "You're not logged in" });
  }
};
